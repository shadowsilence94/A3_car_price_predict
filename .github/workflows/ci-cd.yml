name: Build-Test-Deploy
run-name: ${{ github.actor }} Building and Testing

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Run unit tests
      run: |
        python -m pytest test_model.py -v
    
    - name: Test Dash app import
      run: |
        python -c "from app.app import app; print('âœ… Dash app imports successfully')"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: shadowsilence94/car-price-predict
        tags: |
          type=semver,pattern={{raw}}
          type=raw,value=latest
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to remote server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        proxy_host: ${{ secrets.PROXY_HOST }}
        proxy_username: ${{ secrets.PROXY_USER }}
        proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
        timeout: 60s
        script: |
          /bin/bash -c '
          echo "Setting up deployment directory"
          mkdir -p car-predictor
          cd car-predictor
          cat > docker-compose.yml << EOF
          version: "3.8"
          services:
            car-price-app:
              image: shadowsilence94/car-price-predict:latest
              ports:
                - "8050:8050"
              restart: unless-stopped
              environment:
                - PYTHONUNBUFFERED=1
          EOF
          echo "Stopping existing containers"
          /usr/local/bin/docker compose down || true
          echo "Pulling latest image"
          /usr/local/bin/docker pull shadowsilence94/car-price-predict:latest
          echo "Starting new containers"
          /usr/local/bin/docker compose up -d
          echo "Cleaning up old images"
          /usr/local/bin/docker system prune -f
          echo "Deployment completed successfully"
          '

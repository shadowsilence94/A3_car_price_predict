name: Build-Test-Deploy
run-name: ${{ github.actor }} Building and Testing

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Run unit tests
      run: |
        python -m pytest test_model.py -v
    
    - name: Test Dash app import
      run: |
        python -c "from app.app import app; print('âœ… Dash app imports successfully')"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: shadowsilence94/car-price-predit
        tags: |
          type=semver,pattern={{raw}}
          type=raw,value=latest
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production
    
    steps:
    - name: Deploy notification
      run: |
        echo "âœ… Docker image built and pushed successfully"
        echo "ðŸš€ Tagged Image: shadowsilence94/car-price-predit:${{ github.ref_name }}"
        echo "ðŸš€ Latest Image: shadowsilence94/car-price-predit:latest"
        echo "ðŸ“± Use manual deployment script or deploy directly:"
        echo "   ssh mlbrain 'cd ~/st126010/car-predictor && docker compose down && docker pull shadowsilence94/car-price-predit:latest && docker compose up -d'"
